; *** IR Dump Before Annotation2MetadataPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
; *** IR Dump Before ForceFunctionAttrsPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
; *** IR Dump Before InferFunctionAttrsPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
; *** IR Dump Before CoroEarlyPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
; *** IR Dump Before LowerExpectIntrinsicPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before SROAPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before EarlyCSEPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LowerExpectIntrinsicPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before SROAPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before EarlyCSEPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LowerExpectIntrinsicPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before SROAPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4, !tbaa !5
  %0 = load i32, ptr %x.addr, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 0, ptr %x.addr, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load i32, ptr %x.addr, align 4, !tbaa !5
  ret i32 %1
}
; *** IR Dump Before EarlyCSEPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before OpenMPOptPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before IPSCCPPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @f(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @g(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define i32 @h(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before CalledValuePropagationPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before GlobalOptPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before PromotePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PromotePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PromotePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %sw.bb ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AlwaysInlinerPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before RequireAnalysisPass<llvm::GlobalsAA, llvm::Module> on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before InvalidateAnalysisPass<llvm::AAManager> on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InvalidateAnalysisPass<llvm::AAManager> on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InvalidateAnalysisPass<llvm::AAManager> on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before RequireAnalysisPass<llvm::ProfileSummaryAnalysis, llvm::Module> on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { noinline nounwind optsize ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before InlinerPass on (f) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PostOrderFunctionAttrsPass on (f) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before EarlyCSEPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SpeculativeExecutionPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before JumpThreadingPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CorrelatedValuePropagationPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AggressiveInstCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before TailCallElimPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ReassociatePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ConstraintEliminationPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before VectorCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MergedLoadStoreMotionPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before GVNPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SCCPPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before BDCEPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before JumpThreadingPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CorrelatedValuePropagationPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ADCEPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MemCpyOptPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DSEPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MoveAutoInitPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CoroElidePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PostOrderFunctionAttrsPass on (f) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before RequireAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis, llvm::Function> on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CoroSplitPass on (f) ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InlinerPass on (g) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PostOrderFunctionAttrsPass on (g) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before EarlyCSEPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SpeculativeExecutionPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before JumpThreadingPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CorrelatedValuePropagationPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AggressiveInstCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before TailCallElimPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ReassociatePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ConstraintEliminationPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before VectorCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MergedLoadStoreMotionPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before GVNPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SCCPPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before BDCEPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before JumpThreadingPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CorrelatedValuePropagationPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ADCEPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MemCpyOptPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DSEPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MoveAutoInitPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CoroElidePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PostOrderFunctionAttrsPass on (g) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before RequireAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis, llvm::Function> on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CoroSplitPass on (g) ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InlinerPass on (h) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PostOrderFunctionAttrsPass on (h) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before EarlyCSEPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SpeculativeExecutionPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before JumpThreadingPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CorrelatedValuePropagationPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AggressiveInstCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before TailCallElimPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ReassociatePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ConstraintEliminationPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before VectorCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MergedLoadStoreMotionPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before GVNPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SCCPPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before BDCEPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before JumpThreadingPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CorrelatedValuePropagationPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before ADCEPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MemCpyOptPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DSEPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MoveAutoInitPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CoroElidePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before PostOrderFunctionAttrsPass on (h) ***
; Function Attrs: noinline nounwind optsize ssp uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #1 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before RequireAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis, llvm::Function> on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before CoroSplitPass on (h) ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InvalidateAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis> on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InvalidateAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis> on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InvalidateAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis> on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DeadArgumentEliminationPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before CoroCleanupPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before GlobalOptPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before GlobalDCEPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before EliminateAvailableExternallyPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before ReversePostOrderFunctionAttrsPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before RecomputeGlobalsAAPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before Float2IntPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LowerConstantIntrinsicsPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopDistributePass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InjectTLIMappings on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopVectorizePass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InferAlignmentPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopLoadEliminationPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SLPVectorizerPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before VectorCombinePass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopUnrollPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before WarnMissedTransformationsPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InferAlignmentPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AlignmentFromAssumptionsPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSinkPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstSimplifyPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DivRemPairsPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before TailCallElimPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before Float2IntPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LowerConstantIntrinsicsPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopDistributePass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InjectTLIMappings on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopVectorizePass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InferAlignmentPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopLoadEliminationPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SLPVectorizerPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before VectorCombinePass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopUnrollPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before WarnMissedTransformationsPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InferAlignmentPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AlignmentFromAssumptionsPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSinkPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstSimplifyPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DivRemPairsPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before TailCallElimPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before Float2IntPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LowerConstantIntrinsicsPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopDistributePass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InjectTLIMappings on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopVectorizePass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InferAlignmentPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopLoadEliminationPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  switch i32 %x, label %sw.default [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
  ]

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %x.addr.0 = phi i32 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SLPVectorizerPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before VectorCombinePass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i32 0, i32 %x
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopUnrollPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before WarnMissedTransformationsPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SROAPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InferAlignmentPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstCombinePass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSimplifyPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LCSSAPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AlignmentFromAssumptionsPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before LoopSinkPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before InstSimplifyPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before DivRemPairsPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before TailCallElimPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before SimplifyCFGPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before MergeFunctionsPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

@switch.table.f = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4
@switch.table.g = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4
@switch.table.h = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before GlobalDCEPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

@switch.table.f = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4
@switch.table.g = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4
@switch.table.h = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before ConstantMergePass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

@switch.table.f = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4
@switch.table.g = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4
@switch.table.h = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.f, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.g, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before CGProfilePass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

@switch.table.h = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before RelLookupTableConverterPass on [module] ***
; ModuleID = 'a.c'
source_filename = "a.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

@switch.table.h = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1], align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 19.0.0git (https://github.com/llvm/llvm-project.git ad1083dce4f664265c5489ecd2e46649cd978683)"}
; *** IR Dump Before AnnotationRemarksPass on f ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @f(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AnnotationRemarksPass on g ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @g(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
; *** IR Dump Before AnnotationRemarksPass on h ***
; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize ssp willreturn memory(none) uwtable
define range(i32 0, 2) i32 @h(i32 noundef %x) local_unnamed_addr #0 {
entry:
  %0 = icmp ult i32 %x, 8
  br i1 %0, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %1 = zext nneg i32 %x to i64
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.h, i64 0, i64 %1
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %x.addr.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  ret i32 %x.addr.0
}
